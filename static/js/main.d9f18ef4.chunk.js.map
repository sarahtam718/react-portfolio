{"version":3,"sources":["components/images/full-green-dot-logo.png","components/about.js","components/footer.js","components/portfolio/portfolio-card.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","About","react_default","a","createElement","className","style","width","backgroundColor","color","src","Logo","alt","href","Footer","height","PortCard","props","obj","title","skills","summary","role","githubLink","border","margin","marginBottom","document","body","App","state","console","log","about","cardData","map","project","portfolio_card","key","id","marginTop","footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d9f18ef4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/full-green-dot-logo.448f8e8f.png\";","import React from \"react\";\r\nimport Logo from \"./images/full-green-dot-logo.png\";\r\n\r\nconst About = () => (\r\n  <div className=\"p-4\">\r\n    <div\r\n      className=\"about card shadow rounded\"\r\n      style={{ width: \"18rem\", backgroundColor: \"#849974\", color: \"white\" }}\r\n    >\r\n      <img className=\"card-img-top\" src={Logo} alt={Logo} />\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">About Me</h5>\r\n        <p className=\"card-text\">\r\n          Full Stack Web Developer educated at Northwestern University in Full\r\n          Stack Web Development specializing in React.js, JavaScript, and\r\n          MongoDB.\r\n        </p>\r\n        <p className=\"card-text\">\r\n          Passionate about seeing all the pieces come together to create\r\n          something beautiful and functional. Looking for a great team to join\r\n          as a full-time web developer.\r\n        </p>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <a\r\n              href=\"https://github.com/sarahtam718\"\r\n              className=\"btn\"\r\n              style={{\r\n                backgroundColor: \"#E9DCC3\",\r\n                color: \"#613A43\"\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Github\r\n            </a>\r\n          </div>\r\n          <div className=\"col-5\">\r\n            <a\r\n              href=\"https://www.linkedin.com/in/sarah-tam\"\r\n              className=\"btn\"\r\n              style={{\r\n                backgroundColor: \"#E9DCC3\",\r\n                color: \"#613A43\"\r\n              }}\r\n            >\r\n              {\" \"}\r\n              LinkedIn\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => (\r\n  <div>\r\n    <footer\r\n      className=\"page-footer font-small bg-light fixed-bottom\"\r\n      style={{ height: 40 }}\r\n    >\r\n      <div className=\"footer-copyright text-center py-2\">\r\n        Copyright Sarah Tam 2019\r\n      </div>\r\n    </footer>\r\n  </div>\r\n);\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n// import cardData from \"./cardData.js\";\r\n\r\nconst PortCard = props => {\r\n  // console.log(props.obj);\r\n  return (\r\n    <div className=\"p-4\">\r\n      <div\r\n        className=\"card shadow rounded\"\r\n        style={{ width: \"15rem\", backgroundColor: \"#849974\", color: \"white\" }}\r\n      >\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">\r\n            <strong>{props.obj.title}</strong>\r\n          </h5>\r\n          <ul>\r\n            <li>\r\n              <strong>Skills: </strong>\r\n              {props.obj.skills}\r\n            </li>\r\n            <br />\r\n            <li>\r\n              <strong>Summary: </strong>\r\n              {props.obj.summary}\r\n            </li>\r\n            <br />\r\n            <li>\r\n              <strong>My Role: </strong>\r\n              {props.obj.role}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <a\r\n          href={props.obj.githubLink}\r\n          className=\"btn\"\r\n          style={{\r\n            color: \"#613A43\",\r\n            backgroundColor: \"#E9DCC3\",\r\n            height: 40,\r\n            width: 200,\r\n            border: \"1 solid black\",\r\n            margin: \"auto\",\r\n            marginBottom: 20\r\n          }}\r\n        >\r\n          Github Code\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PortCard;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport About from \"./components/about.js\";\nimport Footer from \"./components/footer.js\";\nimport PortCard from \"./components/portfolio/portfolio-card\";\n// import List from \"./components/list.js\";\nimport cardData from \"./components/portfolio/cardData.json\";\n\ndocument.body.style = \"background-color: #613A43;\";\n\nclass App extends Component {\n  state = {};\n\n  render() {\n    console.log(\"rendered\");\n    return (\n      <div className=\"container\">\n        <div className=\"d-flex flex-wrap flex-row justify-content-center\">\n          <About />\n          {cardData.map(project => (\n            <PortCard obj={project} key={project.id} />\n          ))}\n        </div>\n        <div style={{ marginTop: 40 }}>\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// return (\n//   <div className=\"container justify-content-md-center\">\n//     <div className=\"media d-md-flex\">\n//       <About />\n//       <div className=\"portfolio d-md-flex flex-md-wrap justify-content-md-center\">\n//         {cardData.map(project => (\n//           <PortCard obj={project} key={project.id} />\n//         ))}\n//       </div>\n//     </div>\n//     <div style={{ marginTop: 40 }}>\n//       <Footer />\n//     </div>\n//   </div>\n// );\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}